# Global initialisation file for SciTE
# For Linux, place in $prefix/share/scite
# For Windows, place in same directory as SciTE.EXE (or Sc1.EXE)
# Documentation at http://www.scintilla.org/SciTEDoc.html

# Globals

# Window sizes and visibility
if PLAT_WIN
	position.left=0
	position.top=0
	position.width=1150
	position.height=750
if PLAT_GTK
	position.left=180
	position.top=22
	position.width=1150
	position.height=890
#position.tile=1
#full.screen.hides.menu=1
#minimize.to.tray=1
split.vertical=0
output.horizontal.size=220
output.vertical.size=150
output.initial.hide=1
#horizontal.scrollbar=0
#horizontal.scroll.width=10000
#output.horizontal.scrollbar=0
#output.horizontal.scroll.width=10000
#output.scroll=0
#end.at.last.line=0
tabbar.visible=1
#tabbar.hide.one=1
#tabbar.multiline=1
toolbar.visible=1
#undo.redo.lazy=1
statusbar.visible=1
#fileselector.width=800
#fileselector.height=600
#magnification=-1
#output.magnification=-1

# Sizes and visibility in edit pane
#line.margin.visible=1
line.margin.width=4
margin.width=16
#fold.margin.width=16
#fold.margin.colour=#FF0000
#fold.margin.highlight.colour=#0000FF
#blank.margin.left=4
#blank.margin.right=4
buffered.draw=1
#two.phase.draw=0
use.palette=0

# Element styles
#view.eol=1
#control.char.symbol=.
caret.period=500
view.whitespace=0
view.indentation.whitespace=1
view.indentation.guides=0
highlight.indentation.guides=1
#caret.fore=#FF0000
#caret.width=2
#caret.line.back=#FFFED8
#calltip.back=#FFF0FE
edge.column=100
edge.mode=1
edge.colour=#C0DCC0
braces.check=1
braces.sloppy=1
#selection.fore=#006000
# DADADA used as background because it yields standard silver C0C0C0
# on low colour displays and a reasonable light grey on higher bit depths
#selection.back=#DADADA
#whitespace.fore=#FF0000
#whitespace.back=#FFF0F0
#error.marker.fore=#0000A0
#error.marker.back=#DADAFF
#bookmark.fore=#808000
#bookmark.back=#FFFFA0
bookmark.fore=
use.monospaced=1

# Checking
are.you.sure=1
#are.you.sure.for.build=1
#quit.on.close.last=1
load.on.activate=1
#save.on.deactivate=1
are.you.sure.on.reload=1
#reload.preserves.undo=1
#check.if.already.open=1
default.file.ext=.cxx
#title.full.path=1
#title.show.buffers=1
#save.recent=1
save.session=1
open.dialog.in.file.directory=1
strip.trailing.spaces=1
#ensure.final.line.end=1
#ensure.consistent.line.ends=1
#save.deletes.first=1
buffers=32
buffers.zorder.switching=1
#api.*.cxx=d:\api\w.api
#win95.death.delay=1000
#translation.missing=***
#read.only=1

# Indentation
tabsize=2
indent.size=2
use.tabs=0
indent.automatic=1
indent.opening=0
indent.closing=0
#tab.indents=0
#backspace.unindents=0
#wrap=1
#cache.layout=3
#output.wrap=1
#output.cache.layout=3

# Folding
# enable folding, and show lines below when collapsed.
fold=1
fold.compact=1
fold.flags=16
fold.symbols=1
#fold.on.open=1

# Find and Replace
#escapes.in.find.replace=1
# findstr is available on recent versions of Windows including 2000
if PLAT_WIN
# To use internal Find in Files, set find.command to be empty.
    find.command=
#	find.command=grep -n $(find.what) $(find.files)
#	find.command=findstr /n /s $(find.what) $(find.files)
#find.input=$(find.what)
if PLAT_GTK
	find.command=
# find.command=grep --recursive --line-number "$(find.what)" $(find.files)
find.files=*.cpp *.h *.hpp|*.cpp|*.h *.hpp|*.lua|*.c *.cpp *.h
#find.replace.matchcase=1
#find.replace.escapes=1
#find.replace.regexp=1
find.replace.regexp.posix=1
#find.replace.wrap=0
#find.replacewith.focus=0
find.use.strip=0
replace.use.strip=0

# Behaviour
#eol.mode=LF
eol.auto=1
clear.before.execute=0
#vc.home.key=1
#wrap.aware.home.end.keys=1
#autocompleteword.automatic=1
#autocomplete.choose.single=1
caret.policy.xslop=1
caret.policy.width=20
caret.policy.xstrict=0
caret.policy.xeven=0
caret.policy.xjumps=0
caret.policy.yslop=1
caret.policy.lines=1
caret.policy.ystrict=1
caret.policy.yeven=1
caret.policy.yjumps=0
#visible.policy.strict=1
#visible.policy.slop=1
#visible.policy.lines=4
#time.commands=1
virtual.space=3

# Status Bar
statusbar.number=4
statusbar.text.1=\
li=$(LineNumber) co=$(ColumnNumber) $(OverType) ($(EOLMode)) $(FileAttr)
statusbar.text.2=\
$(BufferLength) chars in $(NbOfLines) lines. Sel: $(SelLength) chars.
statusbar.text.3=\
Now is: Date=$(CurrentDate) Time=$(CurrentTime)
statusbar.text.4=\
$(FileNameExt) : $(FileDate) -- $(FileTime) | $(FileAttr)

if PLAT_WIN
	command.scite.help="file://$(SciteDefaultHome)\index.html"
	command.scite.help.subsystem=2
if PLAT_GTK
	command.print.*=a2ps "$(FileNameExt)"
	command.scite.help=netscape "file://$(SciteDefaultHome)/SciTEDoc.html"

# Internationalisation
# Japanese input code page 932 and ShiftJIS character set 128
#code.page=932
#character.set=128
# Unicode
code.page=65001
#code.page=0
#character.set=204
# Required for Unicode to work on GTK+:
#LC_CTYPE=en_US.UTF-8

# Export
#export.keep.ext=1
export.html.wysiwyg=1
#export.html.tabs=1
#export.html.folding=1
export.html.styleused=1
#export.html.title.fullpath=1
#export.rtf.tabs=1
#export.rtf.font.face=Arial
#export.rtf.font.size=9
#export.rtf.tabsize=8
# Magnification (added to default screen font size)
export.pdf.magnification=0
# Font: Courier, Helvetica or Times (Courier line-wraps)
export.pdf.font=Helvetica
# Page size (in points): width, height
# E.g. Letter 612,792; A4 595,842; maximum 14400,14400
export.pdf.pagesize=595,842
# Margins (in points): left, right, top, bottom
export.pdf.margins=72,72,72,72
export.xml.collapse.spaces=1
export.xml.collapse.lines=1

# Define values for use in the imported properties files
chars.alpha=abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ
chars.numeric=0123456789
chars.accented=??OEoe?ˇ¿‡¡·¬‚√„ƒ‰≈Â∆Ê«Á»Ë…È ÍÀÎÃÏÕÌŒÓœÔ–—Ò“Ú”Û‘Ù’ı÷ÿ¯Ÿ˘⁄˙€˚‹¸›˝ﬁ˛ﬂˆ
# This is a better set for Russian:
#chars.accented=¿‡¡·¬‚√„ƒ‰≈Â®∏∆Ê«Á»Ë…È ÍÀÎÃÏÕÌŒÓœÔ–—Ò“Ú”Û‘Ù’ı÷ˆ◊˜ÿ¯Ÿ˘⁄˙€˚‹¸›˝ﬁ˛ﬂˇ

# The open.filter setting is used in the file selector which has a menu of filters to apply
# to the types of files seen when opening.

# Gather all settings with "*source.patterns." prefix from all active .properties files
source.files=$(star *source.patterns.)
source.all.filter=All Source|$(source.files)|

# Each platform has a different idea of the most important filters
if PLAT_WIN
	all.files=All Files (*.*)|*.*|
	top.filters=$(source.all.filter)$(all.files)
if PLAT_GTK
	all.files=All Files (*)|*|Hidden Files (.*)|.*|
	top.filters=$(source.all.filter)$(all.files)
# As OS X only greys out filtered files, show all as default
if PLAT_MAC
	all.files=All Files (*.*)|*.*|
	top.filters=$(all.files)$(source.all.filter)

# Gather all settings with "*filter." prefix from all active .properties files
list.filters=$(star *filter.)

open.filter=$(top.filters)$(list.filters)

#save.filter=$(open.filter)

# Give symbolic names to the set of fonts used in the standard styles.
if PLAT_WIN
	font.base=$(font.monospace)
  #font.small=font:Verdana,size:9
	font.small=font:Courier New,size:11
	font.comment=$(font.monospace)
	font.code.comment.box=$(font.comment)
	font.code.comment.line=$(font.comment)
	font.code.comment.doc=$(font.comment)
	font.text=font:Times New Roman,size:11
	font.text.comment=font:Verdana,size:9
	font.embedded.base=font:Verdana,size:9
	font.embedded.comment=font:Comic Sans MS,size:8
	font.monospace=font:Courier New,size:12
	font.vbs=font:Lucida Sans Unicode,size:10
if PLAT_GTK
	font.base=$(font.monospace)
	#font.base=font:lucidatypewriter,size:12
	font.small=font:lucidatypewriter,size:10
	font.comment=$(font.monospace)
	#font.comment=font:new century schoolbook,size:12
	font.code.comment.box=$(font.comment)
	font.code.comment.line=$(font.comment)
	font.code.comment.doc=$(font.comment)
	font.text=font:times,size:14
	font.text.comment=font:lucidatypewriter,size:10
	font.embedded.base=font:lucidatypewriter,size:12
	font.embedded.comment=font:lucidatypewriter,size:12
	#font.monospace=font:courier,size:12       # BAD: insufficient vert. space between lines; upper part of 'f' is cut
	#font.monospace=font:terminal,size:10      # BAD: underscores are shown as spaces in SciTE
	#font.monospace=font:FreeMono,size:14      # OK:  but it's somewhat thin
	font.monospace=font:Liberation Mono,size:12
	font.vbs=font:new century schoolbook,size:12
font.js=$(font.comment)

# Give symbolic names to the set of colours used in the standard styles.
colour.code.comment.box=fore:#007F00
colour.code.comment.line=fore:#007F00
colour.code.comment.doc=fore:#3F703F
colour.text.comment=fore:#0000FF,back:#D0F0D0
colour.other.comment=fore:#007F00
colour.embedded.comment=back:#E0EEFF
colour.embedded.js=back:#F0F0FF
colour.notused=back:#FF0000

colour.number=fore:#007F7F
colour.keyword=fore:#00007F
colour.string=fore:#7F007F
colour.char=fore:#7F007F
colour.operator=fore:#000000
colour.preproc=fore:#7F7F00
colour.error=fore:#FFFF00,back:#FF0000

# Global default styles for all languages
# Default
style.*.32=$(font.base),back:#E8FFE8
# Line number
style.*.33=back:#C0C0C0,$(font.base)
# Brace highlight
style.*.34=fore:#FF0000,bold
# Brace incomplete highlight
style.*.35=fore:#FF0000,bold
# Control characters
style.*.36=
# Indentation guides
style.*.37=fore:#C0C0C0,back:#FFFFFF

# Printing - only works on Windows
if PLAT_WIN
	#print.colour.mode=1
	print.magnification=-1
	# Setup: left, right, top, bottom margins, in local units:
	# hundredths of millimeters or thousandths of inches
	print.margins=1500,1000,1000,1500
	# Header/footer:
	# && = &; &p = current page
	# &f = file name; &F = full path
	# &d = file date; &D = current date
	# &t = file time; &T = full time
	print.header.format=$(FileNameExt) -- Printed on $(CurrentDate), $(CurrentTime) -- Page $(CurrentPage)
	print.footer.format=$(FilePath) -- File date: $(FileDate) -- File time: $(FileTime)
	# Header/footer style
	print.header.style=font:Arial,size:12,bold
	print.footer.style=font:Arial Narrow,size:10,italics

# Warnings - only works on Windows and needs to be pointed at files on machine
#if PLAT_WIN
#	warning.findwrapped=100,E:\Windows\Media\SFX\Boing.wav
#	warning.notfound=0,Effect.wav
#	warning.wrongfile=0,Glass.wav
#	warning.executeok=0,Fanfare.wav
#	warning.executeko=100,GlassBreak.wav
#	warning.nootherbookmark=100,Boing2.wav

# Define the Lexer menu,
# Each item contains three parts: menu string | file extension | key
# The only keys allowed currently are based on F-keys and alphabetic keys and look like
# [Ctrl+][Shift+][Fn|a] such as F12 or Ctrl+Shift+D.
# A '&' may be placed before a letter to be used as an accelerator. This does not work on GTK+.
menu.language=\
Text|txt|Shift+F11|\
Ada|ads||\
Apache Confi&g|conf||\
Assembler|asm||\
Avenue|ave||\
Baan|bc||\
&Batch|bat||\
#Bullant|ant||\
&C / C++|c||\
C&#|cs||\
CSS|css||\
&Difference|diff||\
&Eiffel|e||\
Erlang|erl||\
&Errorlist|err||\
&Fortran|f90||\
H&ypertext|html|F12|\
&Java|java||\
Java&Script|js||\
TeX|tex||\
Lisp|lisp||\
Lot|lot||\
#Lout|lt||\
Lu&a|lua||\
Matlab|m.matlab||\
&Makefile|mak|Ctrl+Shift+F11|\
MetaPost|mp||\
MMIXAL|mms||\
#&nnCron crontab|tab||\
#NSIS|nsis||\
Octave|m.octave||\
Pascal|pas||\
Pe&rl|pl||\
P&HP|php||\
P&LSQL|spec||\
&Properties|properties||\
P&ostScript|ps||\
P&OV-Ray SDL|pov||\
Pytho&n|py||\
Reso&urce|rc||\
Ruby|rb||\
Shell|sh||\
S&QL|sql||\
&TCL|tcl||\
&VB|vb||\
VBScr&ipt|vbs||\
#Verilog|v||\
&XML|xml|Shift+F12|\
&YAML|yaml||


# User defined key commands
user.shortcuts=\
Ctrl+PageUp|IDM_PREVFILE|\
Ctrl+PageDown|IDM_NEXTFILE|\
Ctrl+Shift+PageUp|IDM_MOVETABLEFT|\
Ctrl+Shift+PageDown|IDM_MOVETABRIGHT|
#Ctrl+Shift+PageUp|IDM_MOVETABLEFT|\
#Ctrl+Shift+PageDown|IDM_MOVETABRIGHT|\
#KeypadPlus|IDM_EXPAND|\
#KeypadMinus|IDM_BLOCK_COMMENT|

# Import all the language specific properties files
#import ada
import asm
#import ave
#import baan
#import bullant
import conf
import cpp
import css
#import eiffel
#import erlang
#import escript
#import forth
#import fortran
import html
import lisp
#import lot
#import lout
import lua
#import matlab
#import metapost
#import mmixal
#import nncrontab
#import nsis
import others
import pascal
import perl
#import pov
import ps
import python
import ruby
#import scriptol
import sql
import tcl
import tex
import vb
#import yaml
#import verilog

##====######################################################################
properties.directory.enable=1 # 2022-04-13

rectangular.selection.modifier=4

ext.lua.reset=0
ext.lua.startup.script=$(HOME)/repos/scite-config/extman.lua
debug.verbose=1

##==== HEX EDITOR
# command.name.2.*=Hex Editor
# command.subsystem.2.*=3
# command.2.*=HexEditor
# command.save.before.2.*=2

##==== LUACHECK (added on 2020-05-18)
command.name.3.*.lua=LuaCheck
command.shortcut.3.*.lua=Ctrl+Shift+F7
command.3.*.lua=luacheck --config .luacheckrc --no-color "$(FilePath)"
command.save.before.3.*.lua=1
command.subsystem.3.*.lua=0

#==== Running wxLua scripts (added on 2018-09-10)
# command.go.*.wx.lua=wlua.exe $(FileNameExt) $(1)
# command.go.subsystem.*.wx.lua=1

#==== Running wxPython scripts (added on 2018-09-28)
command.go.*.wx.py=python3 -u $(FileNameExt) $(1)
command.go.subsystem.*.wx.py=1
command.go.*_wx.py=python3 -u $(FileNameExt) $(1)
command.go.subsystem.*_wx.py=1

command.go.*.lua=luajit "$(FilePath)" $(1) $(2) $(3) $(4)

#  import /home/shmuel/scintillua/scintillua
#  lexilla.context.scintillua.lexers=/home/shmuel/scintillua/lexers
